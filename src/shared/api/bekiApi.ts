/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/auth/registration": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_registration"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["AuthController_logout"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AuthController_refresh"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ProfileController_getUserData"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/json-settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["ProfileController_updateJsonSettings"];
        trace?: never;
    };
    "/manga/{mangaId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MangaController_getBook"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/covers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MangaController_getBookCovers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RanobeController_getBook"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}/covers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RanobeController_getBookCovers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/bookmark": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MangaBookmarksController_getBookmark"];
        put?: never;
        post?: never;
        delete: operations["MangaBookmarksController_deleteBookmark"];
        options?: never;
        head?: never;
        patch: operations["MangaBookmarksController_setBookmark"];
        trace?: never;
    };
    "/ranobe/{ranobeId}/bookmark": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RanobeBookmarksController_getBookmark"];
        put?: never;
        post?: never;
        delete: operations["RanobeBookmarksController_deleteBookmark"];
        options?: never;
        head?: never;
        patch: operations["RanobeBookmarksController_setBookmark"];
        trace?: never;
    };
    "/catalog/manga": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["CatalogController_getCatalogManga"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/catalog/ranobe": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["CatalogController_getCatalogRanobe"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/book/genres": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["CategoriesController_getGenres"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/book/tags": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["CategoriesController_getTags"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/chapters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["MangaChaptersController_getChapterList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/chapters/{chapterId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["MangaChaptersController_getChapter"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/chapters/{chapterId}/pages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MangaChaptersController_getPages"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}/chapters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["RanobeChaptersController_getChapterList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}/chapters/{chapterId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["RanobeChaptersController_getChapter"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/continue-read/manga": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ContinueReadMangaController_getContinueReadBookList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/continue-read/manga/{mangaId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["ContinueReadMangaController_getContinueReadBook"];
        put?: never;
        post?: never;
        delete: operations["ContinueReadMangaController_dontShowContinueReadBook"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/continue-read/manga/{mangaId}/{chapterId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["ContinueReadMangaController_setContinueReadBook"];
        trace?: never;
    };
    "/continue-read/ranobe": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ContinueReadRanobeController_getContinueReadBookList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/continue-read/ranobe/{ranobeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["ContinueReadRanobeController_getContinueReadBook"];
        put?: never;
        post?: never;
        delete: operations["ContinueReadRanobeController_dontShowContinueReadBook"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/continue-read/ranobe/{ranobeId}/{chapterId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["ContinueReadRanobeController_setContinueReadBook"];
        trace?: never;
    };
    "/manga/{mangaId}/edit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditMangaController_getEditedBook"];
        put: operations["EditMangaController_updateBook"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["EditMangaController_createBook"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}/edit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditRanobeController_getEditedBook"];
        put: operations["EditRanobeController_updateBook"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["EditRanobeController_createBook"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/edit/chapters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditMangaChaptersController_getEditedChapterList"];
        put?: never;
        post: operations["EditMangaChaptersController_createChapter"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/edit/chapters/{chapterId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditMangaChaptersController_getEditedChapter"];
        put: operations["EditMangaChaptersController_updateChapter"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/edit/chapters/{chapterId}/publish": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["EditMangaChaptersController_toggleChapterPublish"];
        trace?: never;
    };
    "/ranobe/{ranobeId}/edit/chapters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditRanobeChaptersController_getEditedChapterList"];
        put?: never;
        post: operations["EditRanobeChaptersController_createChapter"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}/edit/chapters/{chapterId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditRanobeChaptersController_getEditedChapter"];
        put: operations["EditRanobeChaptersController_updateChapter"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}/edit/chapters/{chapterId}/publish": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["EditRanobeChaptersController_toggleChapterPublish"];
        trace?: never;
    };
    "/manga/{mangaId}/edit/covers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditMangaCoversController_getEditedCovers"];
        put?: never;
        post: operations["EditMangaCoversController_addCovers"];
        delete: operations["EditMangaCoversController_deleteCovers"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/edit/covers/{coverId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["EditMangaCoversController_setMainCover"];
        trace?: never;
    };
    "/ranobe/{ranobeId}/edit/covers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditRanobeCoversController_getEditedCovers"];
        put?: never;
        post: operations["EditRanobeCoversController_addCovers"];
        delete: operations["EditRanobeCoversController_deleteCovers"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}/edit/covers/{coverId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["EditRanobeCoversController_setMainCover"];
        trace?: never;
    };
    "/manga/{mangaId}/edit/chapters/{chapterId}/pages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditMangaChaptersPagesController_getPages"];
        put: operations["EditMangaChaptersPagesController_updatePages"];
        post: operations["EditMangaChaptersPagesController_addPage"];
        delete: operations["EditMangaChaptersPagesController_deletePage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/people/{personId}/edit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EditPeopleController_getEditedPerson"];
        put: operations["EditPeopleController_updatePerson"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/people": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["PeopleController_getPeopleList"];
        put?: never;
        post: operations["EditPeopleController_createPerson"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/last-updated/manga": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["LastUpdatedController_getLastUpdatedManga"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/last-updated/ranobe": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["LastUpdatedController_getLastUpdatedRanobe"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/people/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["PeopleController_getPerson"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quick-search/manga": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["QuickSearchMangaController_getBooks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quick-search/manga/last": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["QuickSearchMangaController_getUserLastQueries"];
        put?: never;
        post?: never;
        delete: operations["QuickSearchMangaController_deleteUserLastQuery"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quick-search/ranobe": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["QuickSearchRanobeController_getBooks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quick-search/ranobe/last": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["QuickSearchRanobeController_getUserLastQueries"];
        put?: never;
        post?: never;
        delete: operations["QuickSearchRanobeController_deleteUserLastQuery"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/rate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MangaRateController_getRate"];
        put?: never;
        post?: never;
        delete: operations["MangaRateController_deleteRate"];
        options?: never;
        head?: never;
        patch: operations["MangaRateController_setRate"];
        trace?: never;
    };
    "/ranobe/{ranobeId}/rate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RanobeRateController_getRate"];
        put?: never;
        post?: never;
        delete: operations["RanobeRateController_deleteRate"];
        options?: never;
        head?: never;
        patch: operations["RanobeRateController_setRate"];
        trace?: never;
    };
    "/related-books/manga/{mangaId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RelatedMangaController_getRelatedBooks"];
        put?: never;
        post: operations["RelatedMangaController_addBookRelated"];
        delete: operations["RelatedMangaController_deleteBookRelated"];
        options?: never;
        head?: never;
        patch: operations["RelatedMangaController_updateBookRelated"];
        trace?: never;
    };
    "/related-books/ranobe/{ranobeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RelatedRanobeController_getRelatedBooks"];
        put?: never;
        post: operations["RelatedRanobeController_addBookRelated"];
        delete: operations["RelatedRanobeController_deleteBookRelated"];
        options?: never;
        head?: never;
        patch: operations["RelatedRanobeController_updateBookRelated"];
        trace?: never;
    };
    "/manga/{mangaId}/statistic/rate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MangaStatisticController_getRateStatistic"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/statistic/bookmark": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MangaStatisticController_getBookmarkStatistic"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}/statistic/rate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RanobeStatisticController_getRateStatistic"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranobe/{ranobeId}/statistic/bookmark": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RanobeStatisticController_getBookmarkStatistic"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{mangaId}/chapters/{chapterId}/view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["UserMangaChapterActionsController_addUserViewChapter"];
        trace?: never;
    };
    "/manga/{mangaId}/chapters/{chapterId}/like": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["UserMangaChapterActionsController_getUserLikeChapter"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["UserMangaChapterActionsController_setUserLikeChapter"];
        trace?: never;
    };
    "/ranobe/{ranobeId}/chapters/{chapterId}/view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["UserRanobeChapterActionsController_addUserViewChapter"];
        trace?: never;
    };
    "/ranobe/{ranobeId}/chapters/{chapterId}/like": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Optional auth endpoint */
        get: operations["UserRanobeChapterActionsController_getUserLikeChapter"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["UserRanobeChapterActionsController_setUserLikeChapter"];
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: {
        CreateUserDto: {
            login: string;
            password: string;
        };
        ResponseAccessToken: {
            access: string;
        };
        ErrorType: {
            message: string;
            statusCode: number;
            error?: string;
        };
        LoginUserDto: {
            login: string;
            password: string;
        };
        UserDataDto: {
            id: number;
            name: string;
            avatar: string | null;
            jsonSettings: {
                [key: string]: unknown;
            };
        };
        BookTitle: {
            main: string;
            en: string | null;
            origin: string | null;
        };
        BookCategory: {
            id: number;
            title: string;
        };
        BookOwner: {
            id: number;
            name: string;
            avatar: string | null;
        };
        BookPerson: {
            id: number;
            name: string;
            avatar: string | null;
            role: ("Author" | "Artist" | "Publisher")[];
        };
        Manga: {
            id: number;
            urlId: string;
            title: components["schemas"]["BookTitle"];
            otherTitles: string[];
            description: string;
            rate: number;
            rateCount: number;
            /** Format: date-time */
            releaseDate: string | null;
            /** @enum {number} */
            ageRating: never;
            /** @enum {string} */
            status: "Ongoing" | "Announced" | "Completed" | "Frozen" | "Canceled";
            genres: components["schemas"]["BookCategory"][];
            tags: components["schemas"]["BookCategory"][];
            cover: string | null;
            banner: string | null;
            owner: components["schemas"]["BookOwner"];
            people: components["schemas"]["BookPerson"][];
            /** @enum {string} */
            lang: "ru" | "en";
            /** @enum {string} */
            type: "Manga" | "Manhwa" | "Manhua" | "OEL" | "Rumanga" | "Comic";
        };
        BookCover: {
            id: number;
            cover: string;
        };
        BookCoverList: {
            data: components["schemas"]["BookCover"][];
        };
        Ranobe: {
            id: number;
            urlId: string;
            title: components["schemas"]["BookTitle"];
            otherTitles: string[];
            description: string;
            rate: number;
            rateCount: number;
            /** Format: date-time */
            releaseDate: string | null;
            /** @enum {number} */
            ageRating: never;
            /** @enum {string} */
            status: "Ongoing" | "Announced" | "Completed" | "Frozen" | "Canceled";
            genres: components["schemas"]["BookCategory"][];
            tags: components["schemas"]["BookCategory"][];
            cover: string | null;
            banner: string | null;
            owner: components["schemas"]["BookOwner"];
            people: components["schemas"]["BookPerson"][];
            /** @enum {string} */
            lang: "ru" | "en";
            /** @enum {string} */
            type: "Japan" | "Korea" | "China" | "Foreign" | "Russia" | "Fanfic";
        };
        UserBookBookmark: {
            userId: number;
            bookId: number;
            chapterId: number | null;
            /** @enum {string|null} */
            bookmark: "Reading" | "Planned" | "Readed" | "Abandoned" | "Postponed" | null;
        };
        AddMangaBookmarkDto: {
            /** @enum {string} */
            bookmark: "Reading" | "Planned" | "Readed" | "Abandoned" | "Postponed";
            /** @default null */
            chapterId: number | null;
        };
        AddRanobeBookmarkDto: {
            /** @enum {string} */
            bookmark: "Reading" | "Planned" | "Readed" | "Abandoned" | "Postponed";
            /** @default null */
            chapterId: number | null;
        };
        CatalogManga: {
            id: number;
            urlId: string;
            title: string;
            rate: number;
            cover: string;
            /** @enum {string|null} */
            bookmark: "Reading" | "Planned" | "Readed" | "Abandoned" | "Postponed" | null;
            chapterCount: number;
            /** @enum {string} */
            type: "Manga" | "Manhwa" | "Manhua" | "OEL" | "Rumanga" | "Comic";
        };
        CatalogMangaList: {
            prevPage: number | null;
            nextPage: number | null;
            data: components["schemas"]["CatalogManga"][];
        };
        CatalogRanobe: {
            id: number;
            urlId: string;
            title: string;
            rate: number;
            cover: string;
            /** @enum {string|null} */
            bookmark: "Reading" | "Planned" | "Readed" | "Abandoned" | "Postponed" | null;
            chapterCount: number;
            /** @enum {string} */
            type: "Japan" | "Korea" | "China" | "Foreign" | "Russia" | "Fanfic";
        };
        CatalogRanobeList: {
            prevPage: number | null;
            nextPage: number | null;
            data: components["schemas"]["CatalogRanobe"][];
        };
        CategoryDto: {
            id: number;
            title: string;
        };
        CategoryDtoList: {
            data: components["schemas"]["CategoryDto"][];
        };
        BookChapterListItem: {
            id: number;
            tome: number;
            chapter: number;
            title: string | null;
            /** Format: date-time */
            createdAt: string;
            isUserViewed: boolean;
        };
        BookChapterList: {
            prevPage: number | null;
            nextPage: number | null;
            data: components["schemas"]["BookChapterListItem"][];
        };
        NeighbourBookChapter: {
            id: number;
            tome: number;
            chapter: number;
        };
        BookChapter: {
            id: number;
            tome: number;
            chapter: number;
            title: string | null;
            bookTitle: string;
            prevChapter: components["schemas"]["NeighbourBookChapter"] | null;
            nextChapter: components["schemas"]["NeighbourBookChapter"] | null;
            isUserLiked: boolean;
            isUserViewed: boolean;
        };
        PublicMangaChapterPages: {
            /** @enum {string} */
            view: "pages" | "tape";
            pageCount: number;
            pages: string[];
        };
        ContinueReadBookListItem: {
            id: number;
            urlId: string;
            title: string;
            cover: string;
            tome: number;
            chapter: number;
            chapterId: number;
        };
        ContinueReadBookList: {
            data: components["schemas"]["ContinueReadBookListItem"][];
        };
        ContinueReadBook: {
            tome: number;
            chapter: number;
            chapterId: number | null;
            chapterCount: number;
            readedChapterCount: number;
            bookId: number;
        };
        EditedBookTitle: {
            main: string;
            en: string | null;
            origin: string | null;
        };
        EditedBookCategory: {
            id: number;
            title: string;
        };
        EditedManga: {
            id: number;
            urlId: string;
            title: components["schemas"]["EditedBookTitle"];
            otherTitles: string[];
            description: string;
            /** Format: date-time */
            releaseDate: string | null;
            /** @enum {string} */
            status: "Ongoing" | "Announced" | "Completed" | "Frozen" | "Canceled";
            genres: components["schemas"]["EditedBookCategory"][];
            tags: components["schemas"]["EditedBookCategory"][];
            banner: string | null;
            /** @enum {number} */
            ageRating: never;
            authors: string[];
            artists: string[];
            publishers: string[];
            /** @enum {string} */
            lang: "ru" | "en";
            /** @enum {string} */
            type: "Manga" | "Manhwa" | "Manhua" | "OEL" | "Rumanga" | "Comic";
        };
        MutateMangaDto: {
            urlId?: string;
            title?: {
                main?: string;
                en?: string;
                origin?: string;
            };
            otherTitles?: unknown[][];
            description?: string;
            /** @enum {string} */
            type?: "Manga" | "Manhwa" | "Manhua" | "OEL" | "Rumanga" | "Comic";
            /** @enum {string} */
            status?: "Ongoing" | "Announced" | "Completed" | "Frozen" | "Canceled";
            /** Format: date-time */
            releaseDate?: string;
            genres?: unknown[][];
            tags?: unknown[][];
            /** @description Only Becki field process */
            banner?: string;
            /** @enum {number} */
            ageRating?: 0 | 6 | 12 | 16 | 18;
            authors?: unknown[][];
            artists?: unknown[][];
            publishers?: unknown[][];
            /** @enum {string} */
            lang?: "ru" | "en";
        };
        EditedRanobe: {
            id: number;
            urlId: string;
            title: components["schemas"]["EditedBookTitle"];
            otherTitles: string[];
            description: string;
            /** Format: date-time */
            releaseDate: string | null;
            /** @enum {string} */
            status: "Ongoing" | "Announced" | "Completed" | "Frozen" | "Canceled";
            genres: components["schemas"]["EditedBookCategory"][];
            tags: components["schemas"]["EditedBookCategory"][];
            banner: string | null;
            /** @enum {number} */
            ageRating: never;
            authors: string[];
            artists: string[];
            publishers: string[];
            /** @enum {string} */
            lang: "ru" | "en";
            /** @enum {string} */
            type: "Japan" | "Korea" | "China" | "Foreign" | "Russia" | "Fanfic";
        };
        MutateRanobeDto: {
            urlId?: string;
            title?: {
                main?: string;
                en?: string;
                origin?: string;
            };
            otherTitles?: unknown[][];
            description?: string;
            /** @enum {string} */
            type?: "Japan" | "Korea" | "China" | "Foreign" | "Russia" | "Fanfic";
            /** @enum {string} */
            status?: "Ongoing" | "Announced" | "Completed" | "Frozen" | "Canceled";
            /** Format: date-time */
            releaseDate?: string;
            genres?: unknown[][];
            tags?: unknown[][];
            /** @description Only Becki field process */
            banner?: string;
            /** @enum {number} */
            ageRating?: 0 | 6 | 12 | 16 | 18;
            authors?: unknown[][];
            artists?: unknown[][];
            publishers?: unknown[][];
            /** @enum {string} */
            lang?: "ru" | "en";
        };
        EditedBookChapterListItem: {
            id: number;
            tome: number;
            chapter: number;
            title: string | null;
            /** Format: date-time */
            createdAt: string;
            publish: boolean;
        };
        EditedBookChapterList: {
            prevPage: number | null;
            nextPage: number | null;
            data: components["schemas"]["EditedBookChapterListItem"][];
        };
        EditedBookChapter: {
            id: number;
            title: string | null;
            tome: number;
            chpater: number;
            publish: boolean;
            bookId: number;
        };
        MutateBookChapterDto: {
            title?: string | null;
            tome?: number;
            chapter?: number;
        };
        EditedBookCover: {
            id: number;
            cover: string;
            main: boolean;
        };
        EditedBookCoverList: {
            data: components["schemas"]["EditedBookCover"][];
        };
        DeleteBookCoversDto: {
            coversId: unknown[][];
        };
        MangaChapterPagesDto: {
            /** @enum {string} */
            view: "pages" | "tape";
            pageCount: number;
            /** @description Массив страниц или массив массивов страниц */
            pages: string[] | string[][];
        };
        AddPageResponse: {
            page: string;
        };
        DeleteMangaChapterPage: {
            page: string;
        };
        EditedPersonDescription: {
            ru: string;
            en: string | null;
        };
        EditedPerson: {
            id: number;
            name: string;
            otherNames: string[];
            avatar: string | null;
            description: components["schemas"]["EditedPersonDescription"];
            role: ("Author" | "Artist" | "Publisher")[];
        };
        CreatePersonDto: {
            name: string;
            otherNames?: unknown[][];
            /** @enum {string} */
            role: "Author" | "Artist" | "Publisher";
            /** @default {
             *       "ru": ""
             *     } */
            decription: {
                ru?: string;
                en?: string;
            };
        };
        UpdatePersonDto: {
            name?: string;
            otherNames?: unknown[][];
            role?: ("Author" | "Artist" | "Publisher")[];
            description?: {
                ru?: string;
                en?: string;
            };
        };
        LastUpdatedManga: {
            id: number;
            urlId: string;
            title: string;
            cover: string;
            tome: number;
            chapter: number;
            /** Format: date-time */
            chapterCreatedAt: string;
            chapterId: number;
            /** @enum {string} */
            type: "Manga" | "Manhwa" | "Manhua" | "OEL" | "Rumanga" | "Comic";
        };
        LastUpdatedMangaList: {
            prevPage: number | null;
            nextPage: number | null;
            data: components["schemas"]["LastUpdatedManga"][];
        };
        LastUpdatedRanobe: {
            id: number;
            urlId: string;
            title: string;
            cover: string;
            tome: number;
            chapter: number;
            /** Format: date-time */
            chapterCreatedAt: string;
            chapterId: number;
            /** @enum {string} */
            type: "Japan" | "Korea" | "China" | "Foreign" | "Russia" | "Fanfic";
        };
        LastUpdatedRanobeList: {
            prevPage: number | null;
            nextPage: number | null;
            data: components["schemas"]["LastUpdatedRanobe"][];
        };
        PeopleListItem: {
            id: number;
            name: string;
            avatar: string | null;
        };
        PeopleList: {
            prevPage: number | null;
            nextPage: number | null;
            data: components["schemas"]["PeopleListItem"][];
        };
        Person: {
            id: number;
            name: string;
            avatar: string | null;
            otherNames: string[];
            description: string;
        };
        QuickSearchManga: {
            id: number;
            urlId: string;
            title: string;
            cover: string;
            views: number;
            likes: number;
            bookmarks: number;
            /** @enum {string} */
            type: "Manga" | "Manhwa" | "Manhua" | "OEL" | "Rumanga" | "Comic";
        };
        QuickSearchMangaList: {
            data: components["schemas"]["QuickSearchManga"][];
        };
        QuickSearchLastList: {
            data: string[];
        };
        DeleteQuickSearchLastDto: {
            search: string;
        };
        QuickSearchRanobe: {
            id: number;
            urlId: string;
            title: string;
            cover: string;
            views: number;
            likes: number;
            bookmarks: number;
            /** @enum {string} */
            type: "Japan" | "Korea" | "China" | "Foreign" | "Russia" | "Fanfic";
        };
        QuickSearchRanobeList: {
            data: components["schemas"]["QuickSearchRanobe"][];
        };
        UserBookRate: {
            userId: number;
            bookId: number;
            rate: number | null;
        };
        SetUserBookRateDto: {
            rate: number;
        };
        RelatedBookDto: {
            id: number;
            urlId: string;
            title: string;
            /** @enum {string} */
            type: "Manga" | "Manhwa" | "Manhua" | "OEL" | "Rumanga" | "Comic" | "Japan" | "Korea" | "China" | "Foreign" | "Russia" | "Fanfic";
            cover: string;
            /** @enum {string} */
            status: "Ongoing" | "Announced" | "Completed" | "Frozen" | "Canceled";
            /** @enum {string} */
            relationship: "Continuation" | "Prequel" | "Adaptation" | "Source" | "Spinoff" | "Other";
            relatedId: string;
        };
        RelatedBookDtoList: {
            data: components["schemas"]["RelatedBookDto"][];
        };
        AddRelatedBooksDto: {
            data: {
                [key: string]: "Continuation" | "Prequel" | "Adaptation" | "Source" | "Spinoff" | "Other";
            };
        };
        UpdateRelatedBookDto: {
            relatedId: string;
            /** @enum {string} */
            relationship: "Continuation" | "Prequel" | "Adaptation" | "Source" | "Spinoff" | "Other";
        };
        DeleteRelatedBookDto: {
            relatedId: string;
        };
        PercentItem: {
            count: number;
            percentage: number;
        };
        RateStatistic: {
            1: components["schemas"]["PercentItem"];
            2: components["schemas"]["PercentItem"];
            3: components["schemas"]["PercentItem"];
            4: components["schemas"]["PercentItem"];
            5: components["schemas"]["PercentItem"];
            6: components["schemas"]["PercentItem"];
            7: components["schemas"]["PercentItem"];
            8: components["schemas"]["PercentItem"];
            9: components["schemas"]["PercentItem"];
            10: components["schemas"]["PercentItem"];
        };
        RateSummaryStatistic: {
            rate: number;
            count: number;
            statistic: components["schemas"]["RateStatistic"];
        };
        BookmarkStatistic: {
            Reading: components["schemas"]["PercentItem"];
            Planned: components["schemas"]["PercentItem"];
            Readed: components["schemas"]["PercentItem"];
            Abandoned: components["schemas"]["PercentItem"];
            Postponed: components["schemas"]["PercentItem"];
        };
        BookmarkSummaryStatistic: {
            count: number;
            statistic: components["schemas"]["BookmarkStatistic"];
        };
        UserLikeBookChapterDto: {
            isLiked: boolean;
            likeCount: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type $defs = Record<string, never>;
export interface operations {
    AuthController_registration: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResponseAccessToken"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    AuthController_login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginUserDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResponseAccessToken"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    AuthController_logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    AuthController_refresh: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResponseAccessToken"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    ProfileController_getUserData: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User id get from token */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDataDto"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    ProfileController_updateJsonSettings: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    [key: string]: unknown;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    MangaController_getBook: {
        parameters: {
            query?: {
                lang?: "ru" | "en";
            };
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Manga"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    MangaController_getBookCovers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BookCoverList"];
                };
            };
        };
    };
    RanobeController_getBook: {
        parameters: {
            query?: {
                lang?: "ru" | "en";
            };
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ranobe"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeController_getBookCovers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BookCoverList"];
                };
            };
        };
    };
    MangaBookmarksController_getBookmark: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserBookBookmark"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    MangaBookmarksController_deleteBookmark: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    MangaBookmarksController_setBookmark: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddMangaBookmarkDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeBookmarksController_getBookmark: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserBookBookmark"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeBookmarksController_deleteBookmark: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeBookmarksController_setBookmark: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddRanobeBookmarkDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    CatalogController_getCatalogManga: {
        parameters: {
            query?: {
                /** @description Manga,Manhwa,Manhua,OEL,Rumanga,Comic */
                type?: string;
                search?: string;
                sortBy?: "rating" | "updateDate" | "createDate" | "alphabetically" | "enAlphabetically" | "views" | "likes" | "chapterCount";
                order?: "asc" | "desc";
                genres?: string;
                tags?: string;
                notGenres?: string;
                notTags?: string;
                ageRating?: string;
                /** @description Ongoing,Announced,Completed,Frozen,Canceled */
                status?: string;
                /** @description Reading,Planned,Readed,Abandoned,Postponed */
                bookmarks?: string;
                person?: string;
                bookLang?: "ru" | "en";
                chapterCountFrom?: number;
                chapterCountTo?: number;
                rateCountFrom?: number;
                rateCountTo?: number;
                rateFrom?: number;
                rateTo?: number;
                releaseDateFrom?: string;
                releaseDateTo?: string;
                page?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CatalogMangaList"];
                };
            };
        };
    };
    CatalogController_getCatalogRanobe: {
        parameters: {
            query?: {
                /** @description Japan,Korea,China,Foreign,Russia,Fanfic */
                type?: string;
                search?: string;
                sortBy?: "rating" | "updateDate" | "createDate" | "alphabetically" | "enAlphabetically" | "views" | "likes" | "chapterCount";
                order?: "asc" | "desc";
                genres?: string;
                tags?: string;
                notGenres?: string;
                notTags?: string;
                ageRating?: string;
                /** @description Ongoing,Announced,Completed,Frozen,Canceled */
                status?: string;
                /** @description Reading,Planned,Readed,Abandoned,Postponed */
                bookmarks?: string;
                person?: string;
                bookLang?: "ru" | "en";
                chapterCountFrom?: number;
                chapterCountTo?: number;
                rateCountFrom?: number;
                rateCountTo?: number;
                rateFrom?: number;
                rateTo?: number;
                releaseDateFrom?: string;
                releaseDateTo?: string;
                page?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CatalogRanobeList"];
                };
            };
        };
    };
    CategoriesController_getGenres: {
        parameters: {
            query?: {
                search?: string;
                lang?: "ru" | "en";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryDtoList"];
                };
            };
        };
    };
    CategoriesController_getTags: {
        parameters: {
            query?: {
                search?: string;
                lang?: "ru" | "en";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryDtoList"];
                };
            };
        };
    };
    MangaChaptersController_getChapterList: {
        parameters: {
            query?: {
                search?: string;
                order?: "asc" | "desc";
                page?: number;
                limit?: number;
            };
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BookChapterList"];
                };
            };
        };
    };
    MangaChaptersController_getChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BookChapter"];
                };
            };
        };
    };
    MangaChaptersController_getPages: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PublicMangaChapterPages"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeChaptersController_getChapterList: {
        parameters: {
            query?: {
                search?: string;
                order?: "asc" | "desc";
                page?: number;
                limit?: number;
            };
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BookChapterList"];
                };
            };
        };
    };
    RanobeChaptersController_getChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BookChapter"];
                };
            };
        };
    };
    ContinueReadMangaController_getContinueReadBookList: {
        parameters: {
            query?: {
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContinueReadBookList"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    ContinueReadMangaController_getContinueReadBook: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContinueReadBook"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    ContinueReadMangaController_dontShowContinueReadBook: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    ContinueReadMangaController_setContinueReadBook: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description number Id or null */
                chapterId: string;
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    ContinueReadRanobeController_getContinueReadBookList: {
        parameters: {
            query?: {
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContinueReadBookList"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    ContinueReadRanobeController_getContinueReadBook: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContinueReadBook"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    ContinueReadRanobeController_dontShowContinueReadBook: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    ContinueReadRanobeController_setContinueReadBook: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description number Id or null */
                chapterId: string;
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    EditMangaController_getEditedBook: {
        parameters: {
            query?: {
                lang?: "ru" | "en";
            };
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditedManga"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    EditMangaController_updateBook: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 1 баннер (формат — файл)
                     */
                    banner?: string;
                    /** @description In JSON.stringfy format */
                    body: components["schemas"]["MutateMangaDto"];
                };
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditMangaController_createBook: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 1 обложка (формат — файл)
                     */
                    covers?: string;
                    /**
                     * Format: binary
                     * @description 1 баннер (формат — файл)
                     */
                    banner?: string;
                    /** @description In JSON.stringfy format */
                    body: components["schemas"]["MutateMangaDto"];
                };
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditRanobeController_getEditedBook: {
        parameters: {
            query?: {
                lang?: "ru" | "en";
            };
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditedRanobe"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    EditRanobeController_updateBook: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 1 баннер (формат — файл)
                     */
                    banner?: string;
                    /** @description In JSON.stringfy format */
                    body: components["schemas"]["MutateRanobeDto"];
                };
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditRanobeController_createBook: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 1 обложка (формат — файл)
                     */
                    covers?: string;
                    /**
                     * Format: binary
                     * @description 1 баннер (формат — файл)
                     */
                    banner?: string;
                    /** @description In JSON.stringfy format */
                    body: components["schemas"]["MutateRanobeDto"];
                };
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditMangaChaptersController_getEditedChapterList: {
        parameters: {
            query?: {
                search?: string;
                order?: "asc" | "desc";
                page?: number;
                limit?: number;
            };
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditedBookChapterList"];
                };
            };
        };
    };
    EditMangaChaptersController_createChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MutateBookChapterDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditMangaChaptersController_getEditedChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditedBookChapter"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    EditMangaChaptersController_updateChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MutateBookChapterDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditMangaChaptersController_toggleChapterPublish: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditRanobeChaptersController_getEditedChapterList: {
        parameters: {
            query?: {
                search?: string;
                order?: "asc" | "desc";
                page?: number;
                limit?: number;
            };
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditedBookChapterList"];
                };
            };
        };
    };
    EditRanobeChaptersController_createChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MutateBookChapterDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditRanobeChaptersController_getEditedChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditedBookChapter"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    EditRanobeChaptersController_updateChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MutateBookChapterDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditRanobeChaptersController_toggleChapterPublish: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditMangaCoversController_getEditedCovers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditedBookCoverList"];
                };
            };
        };
    };
    EditMangaCoversController_addCovers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /** @description До 5 изображений обложек (формат — файл) */
                    covers?: string[];
                };
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    EditMangaCoversController_deleteCovers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteBookCoversDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditMangaCoversController_setMainCover: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                coverId: number;
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditRanobeCoversController_getEditedCovers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditedBookCoverList"];
                };
            };
        };
    };
    EditRanobeCoversController_addCovers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /** @description До 5 изображений обложек (формат — файл) */
                    covers?: string[];
                };
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    EditRanobeCoversController_deleteCovers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteBookCoversDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditRanobeCoversController_setMainCover: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                coverId: number;
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditMangaChaptersPagesController_getPages: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MangaChapterPagesDto"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    EditMangaChaptersPagesController_updatePages: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MangaChapterPagesDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditMangaChaptersPagesController_addPage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 1 страница (формат — файл)
                     */
                    page: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AddPageResponse"];
                };
            };
        };
    };
    EditMangaChaptersPagesController_deletePage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteMangaChapterPage"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EditPeopleController_getEditedPerson: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                personId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditedPerson"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    EditPeopleController_updatePerson: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                personId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 1 аватар (формат — файл)
                     */
                    avatar?: string;
                    /** @description In JSON.stringfy format */
                    body: components["schemas"]["UpdatePersonDto"];
                };
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PeopleController_getPeopleList: {
        parameters: {
            query?: {
                search?: string;
                role?: "Author" | "Artist" | "Publisher";
                page?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PeopleList"];
                };
            };
        };
    };
    EditPeopleController_createPerson: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description 1 аватар (формат — файл)
                     */
                    avatar?: string;
                    /** @description In JSON.stringfy format */
                    body: components["schemas"]["CreatePersonDto"];
                };
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    LastUpdatedController_getLastUpdatedManga: {
        parameters: {
            query?: {
                /** @description "my" for authorized users */
                scope?: "all" | "popular" | "my";
                bookLang?: "ru" | "en";
                page?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description scope 'my' for authorized users only */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LastUpdatedMangaList"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    LastUpdatedController_getLastUpdatedRanobe: {
        parameters: {
            query?: {
                /** @description "my" for authorized users */
                scope?: "all" | "popular" | "my";
                bookLang?: "ru" | "en";
                page?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description scope 'my' for authorized users only */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LastUpdatedRanobeList"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    PeopleController_getPerson: {
        parameters: {
            query?: {
                lang?: "ru" | "en";
            };
            header?: never;
            path: {
                /** @description Имя человека */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Person"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    QuickSearchMangaController_getBooks: {
        parameters: {
            query?: {
                search?: string;
                limit?: number;
                bookLang?: "ru" | "en";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QuickSearchMangaList"];
                };
            };
        };
    };
    QuickSearchMangaController_getUserLastQueries: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QuickSearchLastList"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    QuickSearchMangaController_deleteUserLastQuery: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteQuickSearchLastDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    QuickSearchRanobeController_getBooks: {
        parameters: {
            query?: {
                search?: string;
                limit?: number;
                bookLang?: "ru" | "en";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QuickSearchRanobeList"];
                };
            };
        };
    };
    QuickSearchRanobeController_getUserLastQueries: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QuickSearchLastList"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    QuickSearchRanobeController_deleteUserLastQuery: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteQuickSearchLastDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    MangaRateController_getRate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserBookRate"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    MangaRateController_deleteRate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    MangaRateController_setRate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SetUserBookRateDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeRateController_getRate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserBookRate"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeRateController_deleteRate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeRateController_setRate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SetUserBookRateDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RelatedMangaController_getRelatedBooks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RelatedBookDtoList"];
                };
            };
        };
    };
    RelatedMangaController_addBookRelated: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddRelatedBooksDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    RelatedMangaController_deleteBookRelated: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteRelatedBookDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    RelatedMangaController_updateBookRelated: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateRelatedBookDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    RelatedRanobeController_getRelatedBooks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RelatedBookDtoList"];
                };
            };
        };
    };
    RelatedRanobeController_addBookRelated: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddRelatedBooksDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    RelatedRanobeController_deleteBookRelated: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteRelatedBookDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    RelatedRanobeController_updateBookRelated: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateRelatedBookDto"];
            };
        };
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MangaStatisticController_getRateStatistic: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RateSummaryStatistic"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    MangaStatisticController_getBookmarkStatistic: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BookmarkSummaryStatistic"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeStatisticController_getRateStatistic: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RateSummaryStatistic"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    RanobeStatisticController_getBookmarkStatistic: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BookmarkSummaryStatistic"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    UserMangaChapterActionsController_addUserViewChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    UserMangaChapterActionsController_getUserLikeChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserLikeBookChapterDto"];
                };
            };
        };
    };
    UserMangaChapterActionsController_setUserLikeChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                mangaId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    UserRanobeChapterActionsController_addUserViewChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
    UserRanobeChapterActionsController_getUserLikeChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserLikeBookChapterDto"];
                };
            };
        };
    };
    UserRanobeChapterActionsController_setUserLikeChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description urlId or just number id */
                ranobeId: string | number;
                /** @description urlId or just number id */
                chapterId: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorType"];
                };
            };
        };
    };
}
